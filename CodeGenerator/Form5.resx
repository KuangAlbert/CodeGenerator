<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox2.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        338BkxWqQp7bTF0AAAAASUVORK5CYII=
</value>
  </data>
  <data name="pictureBox3.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        338BkxWqQp7bTF0AAAAASUVORK5CYII=
</value>
  </data>
</root>